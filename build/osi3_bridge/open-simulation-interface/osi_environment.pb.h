// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_environment.proto

#ifndef PROTOBUF_osi_5fenvironment_2eproto__INCLUDED
#define PROTOBUF_osi_5fenvironment_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace osi3 {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_osi_5fenvironment_2eproto();
void protobuf_AssignDesc_osi_5fenvironment_2eproto();
void protobuf_ShutdownFile_osi_5fenvironment_2eproto();

class EnvironmentalConditions;
class EnvironmentalConditions_TimeOfDay;

enum EnvironmentalConditions_Precipitation {
  EnvironmentalConditions_Precipitation_PRECIPITATION_UNKNOWN = 0,
  EnvironmentalConditions_Precipitation_PRECIPITATION_OTHER = 1,
  EnvironmentalConditions_Precipitation_PRECIPITATION_NONE = 2,
  EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_LIGHT = 3,
  EnvironmentalConditions_Precipitation_PRECIPITATION_LIGHT = 4,
  EnvironmentalConditions_Precipitation_PRECIPITATION_MODERATE = 5,
  EnvironmentalConditions_Precipitation_PRECIPITATION_HEAVY = 6,
  EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_HEAVY = 7,
  EnvironmentalConditions_Precipitation_PRECIPITATION_EXTREME = 8
};
bool EnvironmentalConditions_Precipitation_IsValid(int value);
const EnvironmentalConditions_Precipitation EnvironmentalConditions_Precipitation_Precipitation_MIN = EnvironmentalConditions_Precipitation_PRECIPITATION_UNKNOWN;
const EnvironmentalConditions_Precipitation EnvironmentalConditions_Precipitation_Precipitation_MAX = EnvironmentalConditions_Precipitation_PRECIPITATION_EXTREME;
const int EnvironmentalConditions_Precipitation_Precipitation_ARRAYSIZE = EnvironmentalConditions_Precipitation_Precipitation_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvironmentalConditions_Precipitation_descriptor();
inline const ::std::string& EnvironmentalConditions_Precipitation_Name(EnvironmentalConditions_Precipitation value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvironmentalConditions_Precipitation_descriptor(), value);
}
inline bool EnvironmentalConditions_Precipitation_Parse(
    const ::std::string& name, EnvironmentalConditions_Precipitation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvironmentalConditions_Precipitation>(
    EnvironmentalConditions_Precipitation_descriptor(), name, value);
}
enum EnvironmentalConditions_Fog {
  EnvironmentalConditions_Fog_FOG_UNKOWN = 0,
  EnvironmentalConditions_Fog_FOG_OTHER = 1,
  EnvironmentalConditions_Fog_FOG_EXCELLENT_VISIBILITY = 2,
  EnvironmentalConditions_Fog_FOG_GOOD_VISIBILITY = 3,
  EnvironmentalConditions_Fog_FOG_MODERATE_VISIBILITY = 4,
  EnvironmentalConditions_Fog_FOG_POOR_VISIBILITY = 5,
  EnvironmentalConditions_Fog_FOG_MIST = 6,
  EnvironmentalConditions_Fog_FOG_LIGHT = 7,
  EnvironmentalConditions_Fog_FOG_THICK = 8,
  EnvironmentalConditions_Fog_FOG_DENSE = 9
};
bool EnvironmentalConditions_Fog_IsValid(int value);
const EnvironmentalConditions_Fog EnvironmentalConditions_Fog_Fog_MIN = EnvironmentalConditions_Fog_FOG_UNKOWN;
const EnvironmentalConditions_Fog EnvironmentalConditions_Fog_Fog_MAX = EnvironmentalConditions_Fog_FOG_DENSE;
const int EnvironmentalConditions_Fog_Fog_ARRAYSIZE = EnvironmentalConditions_Fog_Fog_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvironmentalConditions_Fog_descriptor();
inline const ::std::string& EnvironmentalConditions_Fog_Name(EnvironmentalConditions_Fog value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvironmentalConditions_Fog_descriptor(), value);
}
inline bool EnvironmentalConditions_Fog_Parse(
    const ::std::string& name, EnvironmentalConditions_Fog* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvironmentalConditions_Fog>(
    EnvironmentalConditions_Fog_descriptor(), name, value);
}
enum EnvironmentalConditions_AmbientIllumination {
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_UNKNOWN = 0,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_OTHER = 1,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL1 = 2,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL2 = 3,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL3 = 4,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL4 = 5,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL5 = 6,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL6 = 7,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL7 = 8,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL8 = 9,
  EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL9 = 10
};
bool EnvironmentalConditions_AmbientIllumination_IsValid(int value);
const EnvironmentalConditions_AmbientIllumination EnvironmentalConditions_AmbientIllumination_AmbientIllumination_MIN = EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_UNKNOWN;
const EnvironmentalConditions_AmbientIllumination EnvironmentalConditions_AmbientIllumination_AmbientIllumination_MAX = EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL9;
const int EnvironmentalConditions_AmbientIllumination_AmbientIllumination_ARRAYSIZE = EnvironmentalConditions_AmbientIllumination_AmbientIllumination_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnvironmentalConditions_AmbientIllumination_descriptor();
inline const ::std::string& EnvironmentalConditions_AmbientIllumination_Name(EnvironmentalConditions_AmbientIllumination value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnvironmentalConditions_AmbientIllumination_descriptor(), value);
}
inline bool EnvironmentalConditions_AmbientIllumination_Parse(
    const ::std::string& name, EnvironmentalConditions_AmbientIllumination* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnvironmentalConditions_AmbientIllumination>(
    EnvironmentalConditions_AmbientIllumination_descriptor(), name, value);
}
// ===================================================================

class EnvironmentalConditions_TimeOfDay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.EnvironmentalConditions.TimeOfDay) */ {
 public:
  EnvironmentalConditions_TimeOfDay();
  virtual ~EnvironmentalConditions_TimeOfDay();

  EnvironmentalConditions_TimeOfDay(const EnvironmentalConditions_TimeOfDay& from);

  inline EnvironmentalConditions_TimeOfDay& operator=(const EnvironmentalConditions_TimeOfDay& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvironmentalConditions_TimeOfDay& default_instance();

  void Swap(EnvironmentalConditions_TimeOfDay* other);

  // implements Message ----------------------------------------------

  inline EnvironmentalConditions_TimeOfDay* New() const { return New(NULL); }

  EnvironmentalConditions_TimeOfDay* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnvironmentalConditions_TimeOfDay& from);
  void MergeFrom(const EnvironmentalConditions_TimeOfDay& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnvironmentalConditions_TimeOfDay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 seconds_since_midnight = 1;
  bool has_seconds_since_midnight() const;
  void clear_seconds_since_midnight();
  static const int kSecondsSinceMidnightFieldNumber = 1;
  ::google::protobuf::uint32 seconds_since_midnight() const;
  void set_seconds_since_midnight(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:osi3.EnvironmentalConditions.TimeOfDay)
 private:
  inline void set_has_seconds_since_midnight();
  inline void clear_has_seconds_since_midnight();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 seconds_since_midnight_;
  friend void  protobuf_AddDesc_osi_5fenvironment_2eproto();
  friend void protobuf_AssignDesc_osi_5fenvironment_2eproto();
  friend void protobuf_ShutdownFile_osi_5fenvironment_2eproto();

  void InitAsDefaultInstance();
  static EnvironmentalConditions_TimeOfDay* default_instance_;
};
// -------------------------------------------------------------------

class EnvironmentalConditions : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:osi3.EnvironmentalConditions) */ {
 public:
  EnvironmentalConditions();
  virtual ~EnvironmentalConditions();

  EnvironmentalConditions(const EnvironmentalConditions& from);

  inline EnvironmentalConditions& operator=(const EnvironmentalConditions& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnvironmentalConditions& default_instance();

  void Swap(EnvironmentalConditions* other);

  // implements Message ----------------------------------------------

  inline EnvironmentalConditions* New() const { return New(NULL); }

  EnvironmentalConditions* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EnvironmentalConditions& from);
  void MergeFrom(const EnvironmentalConditions& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(EnvironmentalConditions* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef EnvironmentalConditions_TimeOfDay TimeOfDay;

  typedef EnvironmentalConditions_Precipitation Precipitation;
  static const Precipitation PRECIPITATION_UNKNOWN =
    EnvironmentalConditions_Precipitation_PRECIPITATION_UNKNOWN;
  static const Precipitation PRECIPITATION_OTHER =
    EnvironmentalConditions_Precipitation_PRECIPITATION_OTHER;
  static const Precipitation PRECIPITATION_NONE =
    EnvironmentalConditions_Precipitation_PRECIPITATION_NONE;
  static const Precipitation PRECIPITATION_VERY_LIGHT =
    EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_LIGHT;
  static const Precipitation PRECIPITATION_LIGHT =
    EnvironmentalConditions_Precipitation_PRECIPITATION_LIGHT;
  static const Precipitation PRECIPITATION_MODERATE =
    EnvironmentalConditions_Precipitation_PRECIPITATION_MODERATE;
  static const Precipitation PRECIPITATION_HEAVY =
    EnvironmentalConditions_Precipitation_PRECIPITATION_HEAVY;
  static const Precipitation PRECIPITATION_VERY_HEAVY =
    EnvironmentalConditions_Precipitation_PRECIPITATION_VERY_HEAVY;
  static const Precipitation PRECIPITATION_EXTREME =
    EnvironmentalConditions_Precipitation_PRECIPITATION_EXTREME;
  static inline bool Precipitation_IsValid(int value) {
    return EnvironmentalConditions_Precipitation_IsValid(value);
  }
  static const Precipitation Precipitation_MIN =
    EnvironmentalConditions_Precipitation_Precipitation_MIN;
  static const Precipitation Precipitation_MAX =
    EnvironmentalConditions_Precipitation_Precipitation_MAX;
  static const int Precipitation_ARRAYSIZE =
    EnvironmentalConditions_Precipitation_Precipitation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Precipitation_descriptor() {
    return EnvironmentalConditions_Precipitation_descriptor();
  }
  static inline const ::std::string& Precipitation_Name(Precipitation value) {
    return EnvironmentalConditions_Precipitation_Name(value);
  }
  static inline bool Precipitation_Parse(const ::std::string& name,
      Precipitation* value) {
    return EnvironmentalConditions_Precipitation_Parse(name, value);
  }

  typedef EnvironmentalConditions_Fog Fog;
  static const Fog FOG_UNKOWN =
    EnvironmentalConditions_Fog_FOG_UNKOWN;
  static const Fog FOG_OTHER =
    EnvironmentalConditions_Fog_FOG_OTHER;
  static const Fog FOG_EXCELLENT_VISIBILITY =
    EnvironmentalConditions_Fog_FOG_EXCELLENT_VISIBILITY;
  static const Fog FOG_GOOD_VISIBILITY =
    EnvironmentalConditions_Fog_FOG_GOOD_VISIBILITY;
  static const Fog FOG_MODERATE_VISIBILITY =
    EnvironmentalConditions_Fog_FOG_MODERATE_VISIBILITY;
  static const Fog FOG_POOR_VISIBILITY =
    EnvironmentalConditions_Fog_FOG_POOR_VISIBILITY;
  static const Fog FOG_MIST =
    EnvironmentalConditions_Fog_FOG_MIST;
  static const Fog FOG_LIGHT =
    EnvironmentalConditions_Fog_FOG_LIGHT;
  static const Fog FOG_THICK =
    EnvironmentalConditions_Fog_FOG_THICK;
  static const Fog FOG_DENSE =
    EnvironmentalConditions_Fog_FOG_DENSE;
  static inline bool Fog_IsValid(int value) {
    return EnvironmentalConditions_Fog_IsValid(value);
  }
  static const Fog Fog_MIN =
    EnvironmentalConditions_Fog_Fog_MIN;
  static const Fog Fog_MAX =
    EnvironmentalConditions_Fog_Fog_MAX;
  static const int Fog_ARRAYSIZE =
    EnvironmentalConditions_Fog_Fog_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Fog_descriptor() {
    return EnvironmentalConditions_Fog_descriptor();
  }
  static inline const ::std::string& Fog_Name(Fog value) {
    return EnvironmentalConditions_Fog_Name(value);
  }
  static inline bool Fog_Parse(const ::std::string& name,
      Fog* value) {
    return EnvironmentalConditions_Fog_Parse(name, value);
  }

  typedef EnvironmentalConditions_AmbientIllumination AmbientIllumination;
  static const AmbientIllumination AMBIENT_ILLUMINATION_UNKNOWN =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_UNKNOWN;
  static const AmbientIllumination AMBIENT_ILLUMINATION_OTHER =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_OTHER;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL1 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL1;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL2 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL2;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL3 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL3;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL4 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL4;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL5 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL5;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL6 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL6;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL7 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL7;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL8 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL8;
  static const AmbientIllumination AMBIENT_ILLUMINATION_LEVEL9 =
    EnvironmentalConditions_AmbientIllumination_AMBIENT_ILLUMINATION_LEVEL9;
  static inline bool AmbientIllumination_IsValid(int value) {
    return EnvironmentalConditions_AmbientIllumination_IsValid(value);
  }
  static const AmbientIllumination AmbientIllumination_MIN =
    EnvironmentalConditions_AmbientIllumination_AmbientIllumination_MIN;
  static const AmbientIllumination AmbientIllumination_MAX =
    EnvironmentalConditions_AmbientIllumination_AmbientIllumination_MAX;
  static const int AmbientIllumination_ARRAYSIZE =
    EnvironmentalConditions_AmbientIllumination_AmbientIllumination_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AmbientIllumination_descriptor() {
    return EnvironmentalConditions_AmbientIllumination_descriptor();
  }
  static inline const ::std::string& AmbientIllumination_Name(AmbientIllumination value) {
    return EnvironmentalConditions_AmbientIllumination_Name(value);
  }
  static inline bool AmbientIllumination_Parse(const ::std::string& name,
      AmbientIllumination* value) {
    return EnvironmentalConditions_AmbientIllumination_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional .osi3.EnvironmentalConditions.AmbientIllumination ambient_illumination = 1;
  bool has_ambient_illumination() const;
  void clear_ambient_illumination();
  static const int kAmbientIlluminationFieldNumber = 1;
  ::osi3::EnvironmentalConditions_AmbientIllumination ambient_illumination() const;
  void set_ambient_illumination(::osi3::EnvironmentalConditions_AmbientIllumination value);

  // optional .osi3.EnvironmentalConditions.TimeOfDay time_of_day = 2;
  bool has_time_of_day() const;
  void clear_time_of_day();
  static const int kTimeOfDayFieldNumber = 2;
  const ::osi3::EnvironmentalConditions_TimeOfDay& time_of_day() const;
  ::osi3::EnvironmentalConditions_TimeOfDay* mutable_time_of_day();
  ::osi3::EnvironmentalConditions_TimeOfDay* release_time_of_day();
  void set_allocated_time_of_day(::osi3::EnvironmentalConditions_TimeOfDay* time_of_day);

  // optional double atmospheric_pressure = 3;
  bool has_atmospheric_pressure() const;
  void clear_atmospheric_pressure();
  static const int kAtmosphericPressureFieldNumber = 3;
  double atmospheric_pressure() const;
  void set_atmospheric_pressure(double value);

  // optional double temperature = 4;
  bool has_temperature() const;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 4;
  double temperature() const;
  void set_temperature(double value);

  // optional double relative_humidity = 5;
  bool has_relative_humidity() const;
  void clear_relative_humidity();
  static const int kRelativeHumidityFieldNumber = 5;
  double relative_humidity() const;
  void set_relative_humidity(double value);

  // optional .osi3.EnvironmentalConditions.Precipitation precipitation = 6;
  bool has_precipitation() const;
  void clear_precipitation();
  static const int kPrecipitationFieldNumber = 6;
  ::osi3::EnvironmentalConditions_Precipitation precipitation() const;
  void set_precipitation(::osi3::EnvironmentalConditions_Precipitation value);

  // optional .osi3.EnvironmentalConditions.Fog fog = 7;
  bool has_fog() const;
  void clear_fog();
  static const int kFogFieldNumber = 7;
  ::osi3::EnvironmentalConditions_Fog fog() const;
  void set_fog(::osi3::EnvironmentalConditions_Fog value);

  // @@protoc_insertion_point(class_scope:osi3.EnvironmentalConditions)
 private:
  inline void set_has_ambient_illumination();
  inline void clear_has_ambient_illumination();
  inline void set_has_time_of_day();
  inline void clear_has_time_of_day();
  inline void set_has_atmospheric_pressure();
  inline void clear_has_atmospheric_pressure();
  inline void set_has_temperature();
  inline void clear_has_temperature();
  inline void set_has_relative_humidity();
  inline void clear_has_relative_humidity();
  inline void set_has_precipitation();
  inline void clear_has_precipitation();
  inline void set_has_fog();
  inline void clear_has_fog();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::osi3::EnvironmentalConditions_TimeOfDay* time_of_day_;
  double atmospheric_pressure_;
  int ambient_illumination_;
  int precipitation_;
  double temperature_;
  double relative_humidity_;
  int fog_;
  friend void  protobuf_AddDesc_osi_5fenvironment_2eproto();
  friend void protobuf_AssignDesc_osi_5fenvironment_2eproto();
  friend void protobuf_ShutdownFile_osi_5fenvironment_2eproto();

  void InitAsDefaultInstance();
  static EnvironmentalConditions* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EnvironmentalConditions_TimeOfDay

// optional uint32 seconds_since_midnight = 1;
inline bool EnvironmentalConditions_TimeOfDay::has_seconds_since_midnight() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvironmentalConditions_TimeOfDay::set_has_seconds_since_midnight() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvironmentalConditions_TimeOfDay::clear_has_seconds_since_midnight() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvironmentalConditions_TimeOfDay::clear_seconds_since_midnight() {
  seconds_since_midnight_ = 0u;
  clear_has_seconds_since_midnight();
}
inline ::google::protobuf::uint32 EnvironmentalConditions_TimeOfDay::seconds_since_midnight() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.TimeOfDay.seconds_since_midnight)
  return seconds_since_midnight_;
}
inline void EnvironmentalConditions_TimeOfDay::set_seconds_since_midnight(::google::protobuf::uint32 value) {
  set_has_seconds_since_midnight();
  seconds_since_midnight_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.TimeOfDay.seconds_since_midnight)
}

// -------------------------------------------------------------------

// EnvironmentalConditions

// optional .osi3.EnvironmentalConditions.AmbientIllumination ambient_illumination = 1;
inline bool EnvironmentalConditions::has_ambient_illumination() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnvironmentalConditions::set_has_ambient_illumination() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnvironmentalConditions::clear_has_ambient_illumination() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnvironmentalConditions::clear_ambient_illumination() {
  ambient_illumination_ = 0;
  clear_has_ambient_illumination();
}
inline ::osi3::EnvironmentalConditions_AmbientIllumination EnvironmentalConditions::ambient_illumination() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.ambient_illumination)
  return static_cast< ::osi3::EnvironmentalConditions_AmbientIllumination >(ambient_illumination_);
}
inline void EnvironmentalConditions::set_ambient_illumination(::osi3::EnvironmentalConditions_AmbientIllumination value) {
  assert(::osi3::EnvironmentalConditions_AmbientIllumination_IsValid(value));
  set_has_ambient_illumination();
  ambient_illumination_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.ambient_illumination)
}

// optional .osi3.EnvironmentalConditions.TimeOfDay time_of_day = 2;
inline bool EnvironmentalConditions::has_time_of_day() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnvironmentalConditions::set_has_time_of_day() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnvironmentalConditions::clear_has_time_of_day() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnvironmentalConditions::clear_time_of_day() {
  if (time_of_day_ != NULL) time_of_day_->::osi3::EnvironmentalConditions_TimeOfDay::Clear();
  clear_has_time_of_day();
}
inline const ::osi3::EnvironmentalConditions_TimeOfDay& EnvironmentalConditions::time_of_day() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.time_of_day)
  return time_of_day_ != NULL ? *time_of_day_ : *default_instance_->time_of_day_;
}
inline ::osi3::EnvironmentalConditions_TimeOfDay* EnvironmentalConditions::mutable_time_of_day() {
  set_has_time_of_day();
  if (time_of_day_ == NULL) {
    time_of_day_ = new ::osi3::EnvironmentalConditions_TimeOfDay;
  }
  // @@protoc_insertion_point(field_mutable:osi3.EnvironmentalConditions.time_of_day)
  return time_of_day_;
}
inline ::osi3::EnvironmentalConditions_TimeOfDay* EnvironmentalConditions::release_time_of_day() {
  // @@protoc_insertion_point(field_release:osi3.EnvironmentalConditions.time_of_day)
  clear_has_time_of_day();
  ::osi3::EnvironmentalConditions_TimeOfDay* temp = time_of_day_;
  time_of_day_ = NULL;
  return temp;
}
inline void EnvironmentalConditions::set_allocated_time_of_day(::osi3::EnvironmentalConditions_TimeOfDay* time_of_day) {
  delete time_of_day_;
  time_of_day_ = time_of_day;
  if (time_of_day) {
    set_has_time_of_day();
  } else {
    clear_has_time_of_day();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.EnvironmentalConditions.time_of_day)
}

// optional double atmospheric_pressure = 3;
inline bool EnvironmentalConditions::has_atmospheric_pressure() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnvironmentalConditions::set_has_atmospheric_pressure() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnvironmentalConditions::clear_has_atmospheric_pressure() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnvironmentalConditions::clear_atmospheric_pressure() {
  atmospheric_pressure_ = 0;
  clear_has_atmospheric_pressure();
}
inline double EnvironmentalConditions::atmospheric_pressure() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.atmospheric_pressure)
  return atmospheric_pressure_;
}
inline void EnvironmentalConditions::set_atmospheric_pressure(double value) {
  set_has_atmospheric_pressure();
  atmospheric_pressure_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.atmospheric_pressure)
}

// optional double temperature = 4;
inline bool EnvironmentalConditions::has_temperature() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnvironmentalConditions::set_has_temperature() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnvironmentalConditions::clear_has_temperature() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnvironmentalConditions::clear_temperature() {
  temperature_ = 0;
  clear_has_temperature();
}
inline double EnvironmentalConditions::temperature() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.temperature)
  return temperature_;
}
inline void EnvironmentalConditions::set_temperature(double value) {
  set_has_temperature();
  temperature_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.temperature)
}

// optional double relative_humidity = 5;
inline bool EnvironmentalConditions::has_relative_humidity() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void EnvironmentalConditions::set_has_relative_humidity() {
  _has_bits_[0] |= 0x00000010u;
}
inline void EnvironmentalConditions::clear_has_relative_humidity() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void EnvironmentalConditions::clear_relative_humidity() {
  relative_humidity_ = 0;
  clear_has_relative_humidity();
}
inline double EnvironmentalConditions::relative_humidity() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.relative_humidity)
  return relative_humidity_;
}
inline void EnvironmentalConditions::set_relative_humidity(double value) {
  set_has_relative_humidity();
  relative_humidity_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.relative_humidity)
}

// optional .osi3.EnvironmentalConditions.Precipitation precipitation = 6;
inline bool EnvironmentalConditions::has_precipitation() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void EnvironmentalConditions::set_has_precipitation() {
  _has_bits_[0] |= 0x00000020u;
}
inline void EnvironmentalConditions::clear_has_precipitation() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void EnvironmentalConditions::clear_precipitation() {
  precipitation_ = 0;
  clear_has_precipitation();
}
inline ::osi3::EnvironmentalConditions_Precipitation EnvironmentalConditions::precipitation() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.precipitation)
  return static_cast< ::osi3::EnvironmentalConditions_Precipitation >(precipitation_);
}
inline void EnvironmentalConditions::set_precipitation(::osi3::EnvironmentalConditions_Precipitation value) {
  assert(::osi3::EnvironmentalConditions_Precipitation_IsValid(value));
  set_has_precipitation();
  precipitation_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.precipitation)
}

// optional .osi3.EnvironmentalConditions.Fog fog = 7;
inline bool EnvironmentalConditions::has_fog() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void EnvironmentalConditions::set_has_fog() {
  _has_bits_[0] |= 0x00000040u;
}
inline void EnvironmentalConditions::clear_has_fog() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void EnvironmentalConditions::clear_fog() {
  fog_ = 0;
  clear_has_fog();
}
inline ::osi3::EnvironmentalConditions_Fog EnvironmentalConditions::fog() const {
  // @@protoc_insertion_point(field_get:osi3.EnvironmentalConditions.fog)
  return static_cast< ::osi3::EnvironmentalConditions_Fog >(fog_);
}
inline void EnvironmentalConditions::set_fog(::osi3::EnvironmentalConditions_Fog value) {
  assert(::osi3::EnvironmentalConditions_Fog_IsValid(value));
  set_has_fog();
  fog_ = value;
  // @@protoc_insertion_point(field_set:osi3.EnvironmentalConditions.fog)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::osi3::EnvironmentalConditions_Precipitation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::EnvironmentalConditions_Precipitation>() {
  return ::osi3::EnvironmentalConditions_Precipitation_descriptor();
}
template <> struct is_proto_enum< ::osi3::EnvironmentalConditions_Fog> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::EnvironmentalConditions_Fog>() {
  return ::osi3::EnvironmentalConditions_Fog_descriptor();
}
template <> struct is_proto_enum< ::osi3::EnvironmentalConditions_AmbientIllumination> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::osi3::EnvironmentalConditions_AmbientIllumination>() {
  return ::osi3::EnvironmentalConditions_AmbientIllumination_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_osi_5fenvironment_2eproto__INCLUDED
