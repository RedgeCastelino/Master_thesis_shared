// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_datarecording.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "osi_datarecording.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace osi3 {

namespace {

const ::google::protobuf::Descriptor* SensorDataSeries_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorDataSeries_reflection_ = NULL;
const ::google::protobuf::Descriptor* SensorDataSeriesList_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SensorDataSeriesList_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_osi_5fdatarecording_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_osi_5fdatarecording_2eproto() {
  protobuf_AddDesc_osi_5fdatarecording_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "osi_datarecording.proto");
  GOOGLE_CHECK(file != NULL);
  SensorDataSeries_descriptor_ = file->message_type(0);
  static const int SensorDataSeries_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeries, sensor_data_),
  };
  SensorDataSeries_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SensorDataSeries_descriptor_,
      SensorDataSeries::default_instance_,
      SensorDataSeries_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeries, _has_bits_[0]),
      -1,
      -1,
      sizeof(SensorDataSeries),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeries, _internal_metadata_),
      -1);
  SensorDataSeriesList_descriptor_ = file->message_type(1);
  static const int SensorDataSeriesList_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeriesList, sensor_),
  };
  SensorDataSeriesList_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SensorDataSeriesList_descriptor_,
      SensorDataSeriesList::default_instance_,
      SensorDataSeriesList_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeriesList, _has_bits_[0]),
      -1,
      -1,
      sizeof(SensorDataSeriesList),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SensorDataSeriesList, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_osi_5fdatarecording_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SensorDataSeries_descriptor_, &SensorDataSeries::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SensorDataSeriesList_descriptor_, &SensorDataSeriesList::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_osi_5fdatarecording_2eproto() {
  delete SensorDataSeries::default_instance_;
  delete SensorDataSeries_reflection_;
  delete SensorDataSeriesList::default_instance_;
  delete SensorDataSeriesList_reflection_;
}

void protobuf_AddDesc_osi_5fdatarecording_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_osi_5fdatarecording_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::osi3::protobuf_AddDesc_osi_5fsensordata_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\027osi_datarecording.proto\022\004osi3\032\024osi_sen"
    "sordata.proto\"9\n\020SensorDataSeries\022%\n\013sen"
    "sor_data\030\001 \003(\0132\020.osi3.SensorData\">\n\024Sens"
    "orDataSeriesList\022&\n\006sensor\030\001 \003(\0132\026.osi3."
    "SensorDataSeriesB\002H\001", 180);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_datarecording.proto", &protobuf_RegisterTypes);
  SensorDataSeries::default_instance_ = new SensorDataSeries();
  SensorDataSeriesList::default_instance_ = new SensorDataSeriesList();
  SensorDataSeries::default_instance_->InitAsDefaultInstance();
  SensorDataSeriesList::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_osi_5fdatarecording_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_osi_5fdatarecording_2eproto {
  StaticDescriptorInitializer_osi_5fdatarecording_2eproto() {
    protobuf_AddDesc_osi_5fdatarecording_2eproto();
  }
} static_descriptor_initializer_osi_5fdatarecording_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorDataSeries::kSensorDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorDataSeries::SensorDataSeries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.SensorDataSeries)
}

void SensorDataSeries::InitAsDefaultInstance() {
}

SensorDataSeries::SensorDataSeries(const SensorDataSeries& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.SensorDataSeries)
}

void SensorDataSeries::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorDataSeries::~SensorDataSeries() {
  // @@protoc_insertion_point(destructor:osi3.SensorDataSeries)
  SharedDtor();
}

void SensorDataSeries::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SensorDataSeries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorDataSeries::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorDataSeries_descriptor_;
}

const SensorDataSeries& SensorDataSeries::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdatarecording_2eproto();
  return *default_instance_;
}

SensorDataSeries* SensorDataSeries::default_instance_ = NULL;

SensorDataSeries* SensorDataSeries::New(::google::protobuf::Arena* arena) const {
  SensorDataSeries* n = new SensorDataSeries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorDataSeries::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.SensorDataSeries)
  sensor_data_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SensorDataSeries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.SensorDataSeries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.SensorData sensor_data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sensor_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sensor_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_sensor_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.SensorDataSeries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.SensorDataSeries)
  return false;
#undef DO_
}

void SensorDataSeries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.SensorDataSeries)
  // repeated .osi3.SensorData sensor_data = 1;
  for (unsigned int i = 0, n = this->sensor_data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensor_data(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.SensorDataSeries)
}

::google::protobuf::uint8* SensorDataSeries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.SensorDataSeries)
  // repeated .osi3.SensorData sensor_data = 1;
  for (unsigned int i = 0, n = this->sensor_data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sensor_data(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.SensorDataSeries)
  return target;
}

int SensorDataSeries::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.SensorDataSeries)
  int total_size = 0;

  // repeated .osi3.SensorData sensor_data = 1;
  total_size += 1 * this->sensor_data_size();
  for (int i = 0; i < this->sensor_data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensor_data(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorDataSeries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.SensorDataSeries)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SensorDataSeries* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorDataSeries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.SensorDataSeries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.SensorDataSeries)
    MergeFrom(*source);
  }
}

void SensorDataSeries::MergeFrom(const SensorDataSeries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.SensorDataSeries)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sensor_data_.MergeFrom(from.sensor_data_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SensorDataSeries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.SensorDataSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorDataSeries::CopyFrom(const SensorDataSeries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.SensorDataSeries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorDataSeries::IsInitialized() const {

  return true;
}

void SensorDataSeries::Swap(SensorDataSeries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorDataSeries::InternalSwap(SensorDataSeries* other) {
  sensor_data_.UnsafeArenaSwap(&other->sensor_data_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SensorDataSeries::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorDataSeries_descriptor_;
  metadata.reflection = SensorDataSeries_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SensorDataSeries

// repeated .osi3.SensorData sensor_data = 1;
int SensorDataSeries::sensor_data_size() const {
  return sensor_data_.size();
}
void SensorDataSeries::clear_sensor_data() {
  sensor_data_.Clear();
}
const ::osi3::SensorData& SensorDataSeries::sensor_data(int index) const {
  // @@protoc_insertion_point(field_get:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Get(index);
}
::osi3::SensorData* SensorDataSeries::mutable_sensor_data(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Mutable(index);
}
::osi3::SensorData* SensorDataSeries::add_sensor_data() {
  // @@protoc_insertion_point(field_add:osi3.SensorDataSeries.sensor_data)
  return sensor_data_.Add();
}
::google::protobuf::RepeatedPtrField< ::osi3::SensorData >*
SensorDataSeries::mutable_sensor_data() {
  // @@protoc_insertion_point(field_mutable_list:osi3.SensorDataSeries.sensor_data)
  return &sensor_data_;
}
const ::google::protobuf::RepeatedPtrField< ::osi3::SensorData >&
SensorDataSeries::sensor_data() const {
  // @@protoc_insertion_point(field_list:osi3.SensorDataSeries.sensor_data)
  return sensor_data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SensorDataSeriesList::kSensorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SensorDataSeriesList::SensorDataSeriesList()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.SensorDataSeriesList)
}

void SensorDataSeriesList::InitAsDefaultInstance() {
}

SensorDataSeriesList::SensorDataSeriesList(const SensorDataSeriesList& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.SensorDataSeriesList)
}

void SensorDataSeriesList::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SensorDataSeriesList::~SensorDataSeriesList() {
  // @@protoc_insertion_point(destructor:osi3.SensorDataSeriesList)
  SharedDtor();
}

void SensorDataSeriesList::SharedDtor() {
  if (this != default_instance_) {
  }
}

void SensorDataSeriesList::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SensorDataSeriesList::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SensorDataSeriesList_descriptor_;
}

const SensorDataSeriesList& SensorDataSeriesList::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdatarecording_2eproto();
  return *default_instance_;
}

SensorDataSeriesList* SensorDataSeriesList::default_instance_ = NULL;

SensorDataSeriesList* SensorDataSeriesList::New(::google::protobuf::Arena* arena) const {
  SensorDataSeriesList* n = new SensorDataSeriesList;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SensorDataSeriesList::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.SensorDataSeriesList)
  sensor_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SensorDataSeriesList::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.SensorDataSeriesList)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.SensorDataSeries sensor = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_sensor:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_sensor()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_sensor;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.SensorDataSeriesList)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.SensorDataSeriesList)
  return false;
#undef DO_
}

void SensorDataSeriesList::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.SensorDataSeriesList)
  // repeated .osi3.SensorDataSeries sensor = 1;
  for (unsigned int i = 0, n = this->sensor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->sensor(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.SensorDataSeriesList)
}

::google::protobuf::uint8* SensorDataSeriesList::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.SensorDataSeriesList)
  // repeated .osi3.SensorDataSeries sensor = 1;
  for (unsigned int i = 0, n = this->sensor_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->sensor(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.SensorDataSeriesList)
  return target;
}

int SensorDataSeriesList::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.SensorDataSeriesList)
  int total_size = 0;

  // repeated .osi3.SensorDataSeries sensor = 1;
  total_size += 1 * this->sensor_size();
  for (int i = 0; i < this->sensor_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->sensor(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SensorDataSeriesList::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.SensorDataSeriesList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SensorDataSeriesList* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SensorDataSeriesList>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.SensorDataSeriesList)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.SensorDataSeriesList)
    MergeFrom(*source);
  }
}

void SensorDataSeriesList::MergeFrom(const SensorDataSeriesList& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.SensorDataSeriesList)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  sensor_.MergeFrom(from.sensor_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SensorDataSeriesList::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.SensorDataSeriesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SensorDataSeriesList::CopyFrom(const SensorDataSeriesList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.SensorDataSeriesList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SensorDataSeriesList::IsInitialized() const {

  return true;
}

void SensorDataSeriesList::Swap(SensorDataSeriesList* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SensorDataSeriesList::InternalSwap(SensorDataSeriesList* other) {
  sensor_.UnsafeArenaSwap(&other->sensor_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SensorDataSeriesList::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SensorDataSeriesList_descriptor_;
  metadata.reflection = SensorDataSeriesList_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SensorDataSeriesList

// repeated .osi3.SensorDataSeries sensor = 1;
int SensorDataSeriesList::sensor_size() const {
  return sensor_.size();
}
void SensorDataSeriesList::clear_sensor() {
  sensor_.Clear();
}
const ::osi3::SensorDataSeries& SensorDataSeriesList::sensor(int index) const {
  // @@protoc_insertion_point(field_get:osi3.SensorDataSeriesList.sensor)
  return sensor_.Get(index);
}
::osi3::SensorDataSeries* SensorDataSeriesList::mutable_sensor(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.SensorDataSeriesList.sensor)
  return sensor_.Mutable(index);
}
::osi3::SensorDataSeries* SensorDataSeriesList::add_sensor() {
  // @@protoc_insertion_point(field_add:osi3.SensorDataSeriesList.sensor)
  return sensor_.Add();
}
::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >*
SensorDataSeriesList::mutable_sensor() {
  // @@protoc_insertion_point(field_mutable_list:osi3.SensorDataSeriesList.sensor)
  return &sensor_;
}
const ::google::protobuf::RepeatedPtrField< ::osi3::SensorDataSeries >&
SensorDataSeriesList::sensor() const {
  // @@protoc_insertion_point(field_list:osi3.SensorDataSeriesList.sensor)
  return sensor_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)
