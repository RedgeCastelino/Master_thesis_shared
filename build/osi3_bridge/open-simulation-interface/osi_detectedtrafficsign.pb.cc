// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_detectedtrafficsign.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "osi_detectedtrafficsign.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace osi3 {

namespace {

const ::google::protobuf::Descriptor* DetectedTrafficSign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedTrafficSign_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedTrafficSign_DetectedMainSign_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* DetectedTrafficSign_DetectedMainSign_Geometry_descriptor_ = NULL;
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedTrafficSign_DetectedSupplementarySign_reflection_ = NULL;
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_osi_5fdetectedtrafficsign_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_osi_5fdetectedtrafficsign_2eproto() {
  protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "osi_detectedtrafficsign.proto");
  GOOGLE_CHECK(file != NULL);
  DetectedTrafficSign_descriptor_ = file->message_type(0);
  static const int DetectedTrafficSign_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign, header_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign, main_sign_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign, supplementary_sign_),
  };
  DetectedTrafficSign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectedTrafficSign_descriptor_,
      DetectedTrafficSign::default_instance_,
      DetectedTrafficSign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign, _has_bits_[0]),
      -1,
      -1,
      sizeof(DetectedTrafficSign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign, _internal_metadata_),
      -1);
  DetectedTrafficSign_DetectedMainSign_descriptor_ = DetectedTrafficSign_descriptor_->nested_type(0);
  static const int DetectedTrafficSign_DetectedMainSign_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, candidate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, base_rmse_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, geometry_),
  };
  DetectedTrafficSign_DetectedMainSign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectedTrafficSign_DetectedMainSign_descriptor_,
      DetectedTrafficSign_DetectedMainSign::default_instance_,
      DetectedTrafficSign_DetectedMainSign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, _has_bits_[0]),
      -1,
      -1,
      sizeof(DetectedTrafficSign_DetectedMainSign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign, _internal_metadata_),
      -1);
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_ = DetectedTrafficSign_DetectedMainSign_descriptor_->nested_type(0);
  static const int DetectedTrafficSign_DetectedMainSign_CandidateMainSign_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign_CandidateMainSign, probability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign_CandidateMainSign, classification_),
  };
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_,
      DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance_,
      DetectedTrafficSign_DetectedMainSign_CandidateMainSign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign_CandidateMainSign, _has_bits_[0]),
      -1,
      -1,
      sizeof(DetectedTrafficSign_DetectedMainSign_CandidateMainSign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedMainSign_CandidateMainSign, _internal_metadata_),
      -1);
  DetectedTrafficSign_DetectedMainSign_Geometry_descriptor_ = DetectedTrafficSign_DetectedMainSign_descriptor_->enum_type(0);
  DetectedTrafficSign_DetectedSupplementarySign_descriptor_ = DetectedTrafficSign_descriptor_->nested_type(1);
  static const int DetectedTrafficSign_DetectedSupplementarySign_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign, candidate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign, base_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign, base_rmse_),
  };
  DetectedTrafficSign_DetectedSupplementarySign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectedTrafficSign_DetectedSupplementarySign_descriptor_,
      DetectedTrafficSign_DetectedSupplementarySign::default_instance_,
      DetectedTrafficSign_DetectedSupplementarySign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign, _has_bits_[0]),
      -1,
      -1,
      sizeof(DetectedTrafficSign_DetectedSupplementarySign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign, _internal_metadata_),
      -1);
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_ = DetectedTrafficSign_DetectedSupplementarySign_descriptor_->nested_type(0);
  static const int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, probability_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, classification_),
  };
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_,
      DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance_,
      DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, _has_bits_[0]),
      -1,
      -1,
      sizeof(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_osi_5fdetectedtrafficsign_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectedTrafficSign_descriptor_, &DetectedTrafficSign::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectedTrafficSign_DetectedMainSign_descriptor_, &DetectedTrafficSign_DetectedMainSign::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_, &DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectedTrafficSign_DetectedSupplementarySign_descriptor_, &DetectedTrafficSign_DetectedSupplementarySign::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_, &DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_osi_5fdetectedtrafficsign_2eproto() {
  delete DetectedTrafficSign::default_instance_;
  delete DetectedTrafficSign_reflection_;
  delete DetectedTrafficSign_DetectedMainSign::default_instance_;
  delete DetectedTrafficSign_DetectedMainSign_reflection_;
  delete DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance_;
  delete DetectedTrafficSign_DetectedMainSign_CandidateMainSign_reflection_;
  delete DetectedTrafficSign_DetectedSupplementarySign::default_instance_;
  delete DetectedTrafficSign_DetectedSupplementarySign_reflection_;
  delete DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance_;
  delete DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_reflection_;
}

void protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::osi3::protobuf_AddDesc_osi_5fcommon_2eproto();
  ::osi3::protobuf_AddDesc_osi_5ftrafficsign_2eproto();
  ::osi3::protobuf_AddDesc_osi_5fdetectedobject_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035osi_detectedtrafficsign.proto\022\004osi3\032\020o"
    "si_common.proto\032\025osi_trafficsign.proto\032\030"
    "osi_detectedobject.proto\"\271\t\n\023DetectedTra"
    "fficSign\022(\n\006header\030\001 \001(\0132\030.osi3.Detected"
    "ItemHeader\022=\n\tmain_sign\030\002 \001(\0132*.osi3.Det"
    "ectedTrafficSign.DetectedMainSign\022O\n\022sup"
    "plementary_sign\030\003 \003(\01323.osi3.DetectedTra"
    "fficSign.DetectedSupplementarySign\032\232\005\n\020D"
    "etectedMainSign\022O\n\tcandidate\030\001 \003(\0132<.osi"
    "3.DetectedTrafficSign.DetectedMainSign.C"
    "andidateMainSign\022\"\n\004base\030\002 \001(\0132\024.osi3.Ba"
    "seStationary\022\'\n\tbase_rmse\030\003 \001(\0132\024.osi3.B"
    "aseStationary\022E\n\010geometry\030\004 \001(\01623.osi3.D"
    "etectedTrafficSign.DetectedMainSign.Geom"
    "etry\032k\n\021CandidateMainSign\022\023\n\013probability"
    "\030\001 \001(\001\022A\n\016classification\030\002 \001(\0132).osi3.Tr"
    "afficSign.MainSign.Classification\"\263\002\n\010Ge"
    "ometry\022\024\n\020GEOMETRY_UNKNOWN\020\000\022\022\n\016GEOMETRY"
    "_OTHER\020\001\022\023\n\017GEOMETRY_CIRCLE\020\002\022\031\n\025GEOMETR"
    "Y_TRIANGLE_TOP\020\003\022\032\n\026GEOMETRY_TRIANGLE_DO"
    "WN\020\004\022\023\n\017GEOMETRY_SQUARE\020\005\022\021\n\rGEOMETRY_PO"
    "LE\020\006\022\026\n\022GEOMETRY_RECTANGLE\020\007\022\022\n\016GEOMETRY"
    "_PLATE\020\010\022\024\n\020GEOMETRY_DIAMOND\020\t\022\027\n\023GEOMET"
    "RY_ARROW_LEFT\020\n\022\030\n\024GEOMETRY_ARROW_RIGHT\020"
    "\013\022\024\n\020GEOMETRY_OCTAGON\020\014\032\312\002\n\031DetectedSupp"
    "lementarySign\022a\n\tcandidate\030\001 \003(\0132N.osi3."
    "DetectedTrafficSign.DetectedSupplementar"
    "ySign.CandidateSupplementarySign\022\"\n\004base"
    "\030\002 \001(\0132\024.osi3.BaseStationary\022\'\n\tbase_rms"
    "e\030\003 \001(\0132\024.osi3.BaseStationary\032}\n\032Candida"
    "teSupplementarySign\022\023\n\013probability\030\001 \001(\001"
    "\022J\n\016classification\030\002 \001(\01322.osi3.TrafficS"
    "ign.SupplementarySign.ClassificationB\002H\001", 1320);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_detectedtrafficsign.proto", &protobuf_RegisterTypes);
  DetectedTrafficSign::default_instance_ = new DetectedTrafficSign();
  DetectedTrafficSign_DetectedMainSign::default_instance_ = new DetectedTrafficSign_DetectedMainSign();
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance_ = new DetectedTrafficSign_DetectedMainSign_CandidateMainSign();
  DetectedTrafficSign_DetectedSupplementarySign::default_instance_ = new DetectedTrafficSign_DetectedSupplementarySign();
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance_ = new DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign();
  DetectedTrafficSign::default_instance_->InitAsDefaultInstance();
  DetectedTrafficSign_DetectedMainSign::default_instance_->InitAsDefaultInstance();
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance_->InitAsDefaultInstance();
  DetectedTrafficSign_DetectedSupplementarySign::default_instance_->InitAsDefaultInstance();
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_osi_5fdetectedtrafficsign_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_osi_5fdetectedtrafficsign_2eproto {
  StaticDescriptorInitializer_osi_5fdetectedtrafficsign_2eproto() {
    protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  }
} static_descriptor_initializer_osi_5fdetectedtrafficsign_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* DetectedTrafficSign_DetectedMainSign_Geometry_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_DetectedMainSign_Geometry_descriptor_;
}
bool DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_UNKNOWN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_OTHER;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_CIRCLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_TRIANGLE_TOP;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_TRIANGLE_DOWN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_SQUARE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_POLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_RECTANGLE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_PLATE;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_DIAMOND;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_ARROW_LEFT;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_ARROW_RIGHT;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::GEOMETRY_OCTAGON;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::Geometry_MIN;
const DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::Geometry_MAX;
const int DetectedTrafficSign_DetectedMainSign::Geometry_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedMainSign_CandidateMainSign::kProbabilityFieldNumber;
const int DetectedTrafficSign_DetectedMainSign_CandidateMainSign::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedMainSign_CandidateMainSign::DetectedTrafficSign_DetectedMainSign_CandidateMainSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InitAsDefaultInstance() {
  classification_ = const_cast< ::osi3::TrafficSign_MainSign_Classification*>(&::osi3::TrafficSign_MainSign_Classification::default_instance());
}

DetectedTrafficSign_DetectedMainSign_CandidateMainSign::DetectedTrafficSign_DetectedMainSign_CandidateMainSign(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SharedCtor() {
  _cached_size_ = 0;
  probability_ = 0;
  classification_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedTrafficSign_DetectedMainSign_CandidateMainSign::~DetectedTrafficSign_DetectedMainSign_CandidateMainSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SharedDtor() {
  if (this != default_instance_) {
    delete classification_;
  }
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_;
}

const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  return *default_instance_;
}

DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::default_instance_ = NULL;

DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedMainSign_CandidateMainSign* n = new DetectedTrafficSign_DetectedMainSign_CandidateMainSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (_has_bits_[0 / 32] & 3u) {
    probability_ = 0;
    if (has_classification()) {
      if (classification_ != NULL) classification_->::osi3::TrafficSign_MainSign_Classification::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double probability = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
          set_has_probability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_classification;
        break;
      }

      // optional .osi3.TrafficSign.MainSign.Classification classification = 2;
      case 2: {
        if (tag == 18) {
         parse_classification:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  // optional double probability = 1;
  if (has_probability()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // optional .osi3.TrafficSign.MainSign.Classification classification = 2;
  if (has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  // optional double probability = 1;
  if (has_probability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // optional .osi3.TrafficSign.MainSign.Classification classification = 2;
  if (has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->classification_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  return target;
}

int DetectedTrafficSign_DetectedMainSign_CandidateMainSign::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional double probability = 1;
    if (has_probability()) {
      total_size += 1 + 8;
    }

    // optional .osi3.TrafficSign.MainSign.Classification classification = 2;
    if (has_classification()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->classification_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectedTrafficSign_DetectedMainSign_CandidateMainSign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedMainSign_CandidateMainSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::MergeFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_probability()) {
      set_probability(from.probability());
    }
    if (from.has_classification()) {
      mutable_classification()->::osi3::TrafficSign_MainSign_Classification::MergeFrom(from.classification());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::CopyFrom(const DetectedTrafficSign_DetectedMainSign_CandidateMainSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::IsInitialized() const {

  return true;
}

void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::Swap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::InternalSwap(DetectedTrafficSign_DetectedMainSign_CandidateMainSign* other) {
  std::swap(probability_, other->probability_);
  std::swap(classification_, other->classification_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedMainSign_CandidateMainSign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedTrafficSign_DetectedMainSign_CandidateMainSign_descriptor_;
  metadata.reflection = DetectedTrafficSign_DetectedMainSign_CandidateMainSign_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedMainSign::kCandidateFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kBaseFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kBaseRmseFieldNumber;
const int DetectedTrafficSign_DetectedMainSign::kGeometryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedMainSign::DetectedTrafficSign_DetectedMainSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedMainSign)
}

void DetectedTrafficSign_DetectedMainSign::InitAsDefaultInstance() {
  base_ = const_cast< ::osi3::BaseStationary*>(&::osi3::BaseStationary::default_instance());
  base_rmse_ = const_cast< ::osi3::BaseStationary*>(&::osi3::BaseStationary::default_instance());
}

DetectedTrafficSign_DetectedMainSign::DetectedTrafficSign_DetectedMainSign(const DetectedTrafficSign_DetectedMainSign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedMainSign)
}

void DetectedTrafficSign_DetectedMainSign::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  base_rmse_ = NULL;
  geometry_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedTrafficSign_DetectedMainSign::~DetectedTrafficSign_DetectedMainSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedMainSign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedMainSign::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
    delete base_rmse_;
  }
}

void DetectedTrafficSign_DetectedMainSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedMainSign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_DetectedMainSign_descriptor_;
}

const DetectedTrafficSign_DetectedMainSign& DetectedTrafficSign_DetectedMainSign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  return *default_instance_;
}

DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign_DetectedMainSign::default_instance_ = NULL;

DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign_DetectedMainSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedMainSign* n = new DetectedTrafficSign_DetectedMainSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedMainSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (_has_bits_[0 / 32] & 14u) {
    if (has_base()) {
      if (base_ != NULL) base_->::osi3::BaseStationary::Clear();
    }
    if (has_base_rmse()) {
      if (base_rmse_ != NULL) base_rmse_->::osi3::BaseStationary::Clear();
    }
    geometry_ = 0;
  }
  candidate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DetectedTrafficSign_DetectedMainSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedMainSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_candidate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_candidate;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_base;
        break;
      }

      // optional .osi3.BaseStationary base = 2;
      case 2: {
        if (tag == 18) {
         parse_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_base_rmse;
        break;
      }

      // optional .osi3.BaseStationary base_rmse = 3;
      case 3: {
        if (tag == 26) {
         parse_base_rmse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_geometry;
        break;
      }

      // optional .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
      case 4: {
        if (tag == 32) {
         parse_geometry:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::osi3::DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(value)) {
            set_geometry(static_cast< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedMainSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedMainSign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedMainSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedMainSign)
  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  for (unsigned int i = 0, n = this->candidate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->candidate(i), output);
  }

  // optional .osi3.BaseStationary base = 2;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // optional .osi3.BaseStationary base_rmse = 3;
  if (has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  // optional .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  if (has_geometry()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->geometry(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedMainSign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedMainSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedMainSign)
  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  for (unsigned int i = 0, n = this->candidate_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->candidate(i), false, target);
  }

  // optional .osi3.BaseStationary base = 2;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->base_, false, target);
  }

  // optional .osi3.BaseStationary base_rmse = 3;
  if (has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->base_rmse_, false, target);
  }

  // optional .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
  if (has_geometry()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->geometry(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedMainSign)
  return target;
}

int DetectedTrafficSign_DetectedMainSign::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedMainSign)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 14u) {
    // optional .osi3.BaseStationary base = 2;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->base_);
    }

    // optional .osi3.BaseStationary base_rmse = 3;
    if (has_base_rmse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->base_rmse_);
    }

    // optional .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
    if (has_geometry()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->geometry());
    }

  }
  // repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
  total_size += 1 * this->candidate_size();
  for (int i = 0; i < this->candidate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->candidate(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedMainSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectedTrafficSign_DetectedMainSign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedMainSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedMainSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedMainSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedMainSign::MergeFrom(const DetectedTrafficSign_DetectedMainSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  candidate_.MergeFrom(from.candidate_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_base()) {
      mutable_base()->::osi3::BaseStationary::MergeFrom(from.base());
    }
    if (from.has_base_rmse()) {
      mutable_base_rmse()->::osi3::BaseStationary::MergeFrom(from.base_rmse());
    }
    if (from.has_geometry()) {
      set_geometry(from.geometry());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DetectedTrafficSign_DetectedMainSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedMainSign::CopyFrom(const DetectedTrafficSign_DetectedMainSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedMainSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedMainSign::IsInitialized() const {

  return true;
}

void DetectedTrafficSign_DetectedMainSign::Swap(DetectedTrafficSign_DetectedMainSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedMainSign::InternalSwap(DetectedTrafficSign_DetectedMainSign* other) {
  candidate_.UnsafeArenaSwap(&other->candidate_);
  std::swap(base_, other->base_);
  std::swap(base_rmse_, other->base_rmse_);
  std::swap(geometry_, other->geometry_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedMainSign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedTrafficSign_DetectedMainSign_descriptor_;
  metadata.reflection = DetectedTrafficSign_DetectedMainSign_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::kProbabilityFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::kClassificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InitAsDefaultInstance() {
  classification_ = const_cast< ::osi3::TrafficSign_SupplementarySign_Classification*>(&::osi3::TrafficSign_SupplementarySign_Classification::default_instance());
}

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SharedCtor() {
  _cached_size_ = 0;
  probability_ = 0;
  classification_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::~DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SharedDtor() {
  if (this != default_instance_) {
    delete classification_;
  }
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_;
}

const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  return *default_instance_;
}

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::default_instance_ = NULL;

DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* n = new DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (_has_bits_[0 / 32] & 3u) {
    probability_ = 0;
    if (has_classification()) {
      if (classification_ != NULL) classification_->::osi3::TrafficSign_SupplementarySign_Classification::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional double probability = 1;
      case 1: {
        if (tag == 9) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &probability_)));
          set_has_probability();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_classification;
        break;
      }

      // optional .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
      case 2: {
        if (tag == 18) {
         parse_classification:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_classification()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  // optional double probability = 1;
  if (has_probability()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->probability(), output);
  }

  // optional .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  if (has_classification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->classification_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  // optional double probability = 1;
  if (has_probability()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->probability(), target);
  }

  // optional .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
  if (has_classification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->classification_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  return target;
}

int DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional double probability = 1;
    if (has_probability()) {
      total_size += 1 + 8;
    }

    // optional .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
    if (has_classification()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->classification_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_probability()) {
      set_probability(from.probability());
    }
    if (from.has_classification()) {
      mutable_classification()->::osi3::TrafficSign_SupplementarySign_Classification::MergeFrom(from.classification());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::IsInitialized() const {

  return true;
}

void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::Swap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::InternalSwap(DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* other) {
  std::swap(probability_, other->probability_);
  std::swap(classification_, other->classification_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_descriptor_;
  metadata.reflection = DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign_DetectedSupplementarySign::kCandidateFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign::kBaseFieldNumber;
const int DetectedTrafficSign_DetectedSupplementarySign::kBaseRmseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign_DetectedSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign::InitAsDefaultInstance() {
  base_ = const_cast< ::osi3::BaseStationary*>(&::osi3::BaseStationary::default_instance());
  base_rmse_ = const_cast< ::osi3::BaseStationary*>(&::osi3::BaseStationary::default_instance());
}

DetectedTrafficSign_DetectedSupplementarySign::DetectedTrafficSign_DetectedSupplementarySign(const DetectedTrafficSign_DetectedSupplementarySign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}

void DetectedTrafficSign_DetectedSupplementarySign::SharedCtor() {
  _cached_size_ = 0;
  base_ = NULL;
  base_rmse_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedTrafficSign_DetectedSupplementarySign::~DetectedTrafficSign_DetectedSupplementarySign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  SharedDtor();
}

void DetectedTrafficSign_DetectedSupplementarySign::SharedDtor() {
  if (this != default_instance_) {
    delete base_;
    delete base_rmse_;
  }
}

void DetectedTrafficSign_DetectedSupplementarySign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign_DetectedSupplementarySign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_DetectedSupplementarySign_descriptor_;
}

const DetectedTrafficSign_DetectedSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  return *default_instance_;
}

DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::default_instance_ = NULL;

DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign_DetectedSupplementarySign* n = new DetectedTrafficSign_DetectedSupplementarySign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign_DetectedSupplementarySign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (_has_bits_[0 / 32] & 6u) {
    if (has_base()) {
      if (base_ != NULL) base_->::osi3::BaseStationary::Clear();
    }
    if (has_base_rmse()) {
      if (base_rmse_ != NULL) base_rmse_->::osi3::BaseStationary::Clear();
    }
  }
  candidate_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DetectedTrafficSign_DetectedSupplementarySign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_candidate:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_candidate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_candidate;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_base;
        break;
      }

      // optional .osi3.BaseStationary base = 2;
      case 2: {
        if (tag == 18) {
         parse_base:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_base_rmse;
        break;
      }

      // optional .osi3.BaseStationary base_rmse = 3;
      case 3: {
        if (tag == 26) {
         parse_base_rmse:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_base_rmse()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return false;
#undef DO_
}

void DetectedTrafficSign_DetectedSupplementarySign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  for (unsigned int i = 0, n = this->candidate_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->candidate(i), output);
  }

  // optional .osi3.BaseStationary base = 2;
  if (has_base()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->base_, output);
  }

  // optional .osi3.BaseStationary base_rmse = 3;
  if (has_base_rmse()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->base_rmse_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign.DetectedSupplementarySign)
}

::google::protobuf::uint8* DetectedTrafficSign_DetectedSupplementarySign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  for (unsigned int i = 0, n = this->candidate_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->candidate(i), false, target);
  }

  // optional .osi3.BaseStationary base = 2;
  if (has_base()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->base_, false, target);
  }

  // optional .osi3.BaseStationary base_rmse = 3;
  if (has_base_rmse()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->base_rmse_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  return target;
}

int DetectedTrafficSign_DetectedSupplementarySign::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  int total_size = 0;

  if (_has_bits_[1 / 32] & 6u) {
    // optional .osi3.BaseStationary base = 2;
    if (has_base()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->base_);
    }

    // optional .osi3.BaseStationary base_rmse = 3;
    if (has_base_rmse()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->base_rmse_);
    }

  }
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
  total_size += 1 * this->candidate_size();
  for (int i = 0; i < this->candidate_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->candidate(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign_DetectedSupplementarySign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectedTrafficSign_DetectedSupplementarySign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign_DetectedSupplementarySign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign.DetectedSupplementarySign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign.DetectedSupplementarySign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign_DetectedSupplementarySign::MergeFrom(const DetectedTrafficSign_DetectedSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  candidate_.MergeFrom(from.candidate_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_base()) {
      mutable_base()->::osi3::BaseStationary::MergeFrom(from.base());
    }
    if (from.has_base_rmse()) {
      mutable_base_rmse()->::osi3::BaseStationary::MergeFrom(from.base_rmse());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DetectedTrafficSign_DetectedSupplementarySign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign_DetectedSupplementarySign::CopyFrom(const DetectedTrafficSign_DetectedSupplementarySign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign.DetectedSupplementarySign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign_DetectedSupplementarySign::IsInitialized() const {

  return true;
}

void DetectedTrafficSign_DetectedSupplementarySign::Swap(DetectedTrafficSign_DetectedSupplementarySign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign_DetectedSupplementarySign::InternalSwap(DetectedTrafficSign_DetectedSupplementarySign* other) {
  candidate_.UnsafeArenaSwap(&other->candidate_);
  std::swap(base_, other->base_);
  std::swap(base_rmse_, other->base_rmse_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign_DetectedSupplementarySign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedTrafficSign_DetectedSupplementarySign_descriptor_;
  metadata.reflection = DetectedTrafficSign_DetectedSupplementarySign_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DetectedTrafficSign::kHeaderFieldNumber;
const int DetectedTrafficSign::kMainSignFieldNumber;
const int DetectedTrafficSign::kSupplementarySignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DetectedTrafficSign::DetectedTrafficSign()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.DetectedTrafficSign)
}

void DetectedTrafficSign::InitAsDefaultInstance() {
  header_ = const_cast< ::osi3::DetectedItemHeader*>(&::osi3::DetectedItemHeader::default_instance());
  main_sign_ = const_cast< ::osi3::DetectedTrafficSign_DetectedMainSign*>(&::osi3::DetectedTrafficSign_DetectedMainSign::default_instance());
}

DetectedTrafficSign::DetectedTrafficSign(const DetectedTrafficSign& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.DetectedTrafficSign)
}

void DetectedTrafficSign::SharedCtor() {
  _cached_size_ = 0;
  header_ = NULL;
  main_sign_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DetectedTrafficSign::~DetectedTrafficSign() {
  // @@protoc_insertion_point(destructor:osi3.DetectedTrafficSign)
  SharedDtor();
}

void DetectedTrafficSign::SharedDtor() {
  if (this != default_instance_) {
    delete header_;
    delete main_sign_;
  }
}

void DetectedTrafficSign::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DetectedTrafficSign::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DetectedTrafficSign_descriptor_;
}

const DetectedTrafficSign& DetectedTrafficSign::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fdetectedtrafficsign_2eproto();
  return *default_instance_;
}

DetectedTrafficSign* DetectedTrafficSign::default_instance_ = NULL;

DetectedTrafficSign* DetectedTrafficSign::New(::google::protobuf::Arena* arena) const {
  DetectedTrafficSign* n = new DetectedTrafficSign;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DetectedTrafficSign::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.DetectedTrafficSign)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_header()) {
      if (header_ != NULL) header_->::osi3::DetectedItemHeader::Clear();
    }
    if (has_main_sign()) {
      if (main_sign_ != NULL) main_sign_->::osi3::DetectedTrafficSign_DetectedMainSign::Clear();
    }
  }
  supplementary_sign_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DetectedTrafficSign::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.DetectedTrafficSign)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .osi3.DetectedItemHeader header = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_main_sign;
        break;
      }

      // optional .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
      case 2: {
        if (tag == 18) {
         parse_main_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_main_sign()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_supplementary_sign;
        break;
      }

      // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
      case 3: {
        if (tag == 26) {
         parse_supplementary_sign:
          DO_(input->IncrementRecursionDepth());
         parse_loop_supplementary_sign:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_supplementary_sign()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_supplementary_sign;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.DetectedTrafficSign)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.DetectedTrafficSign)
  return false;
#undef DO_
}

void DetectedTrafficSign::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.DetectedTrafficSign)
  // optional .osi3.DetectedItemHeader header = 1;
  if (has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->header_, output);
  }

  // optional .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  if (has_main_sign()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->main_sign_, output);
  }

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  for (unsigned int i = 0, n = this->supplementary_sign_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->supplementary_sign(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.DetectedTrafficSign)
}

::google::protobuf::uint8* DetectedTrafficSign::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.DetectedTrafficSign)
  // optional .osi3.DetectedItemHeader header = 1;
  if (has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->header_, false, target);
  }

  // optional .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
  if (has_main_sign()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->main_sign_, false, target);
  }

  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  for (unsigned int i = 0, n = this->supplementary_sign_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->supplementary_sign(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.DetectedTrafficSign)
  return target;
}

int DetectedTrafficSign::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.DetectedTrafficSign)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .osi3.DetectedItemHeader header = 1;
    if (has_header()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->header_);
    }

    // optional .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
    if (has_main_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->main_sign_);
    }

  }
  // repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
  total_size += 1 * this->supplementary_sign_size();
  for (int i = 0; i < this->supplementary_sign_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->supplementary_sign(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DetectedTrafficSign::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.DetectedTrafficSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const DetectedTrafficSign* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DetectedTrafficSign>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.DetectedTrafficSign)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.DetectedTrafficSign)
    MergeFrom(*source);
  }
}

void DetectedTrafficSign::MergeFrom(const DetectedTrafficSign& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.DetectedTrafficSign)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  supplementary_sign_.MergeFrom(from.supplementary_sign_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_header()) {
      mutable_header()->::osi3::DetectedItemHeader::MergeFrom(from.header());
    }
    if (from.has_main_sign()) {
      mutable_main_sign()->::osi3::DetectedTrafficSign_DetectedMainSign::MergeFrom(from.main_sign());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DetectedTrafficSign::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.DetectedTrafficSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DetectedTrafficSign::CopyFrom(const DetectedTrafficSign& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.DetectedTrafficSign)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DetectedTrafficSign::IsInitialized() const {

  return true;
}

void DetectedTrafficSign::Swap(DetectedTrafficSign* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DetectedTrafficSign::InternalSwap(DetectedTrafficSign* other) {
  std::swap(header_, other->header_);
  std::swap(main_sign_, other->main_sign_);
  supplementary_sign_.UnsafeArenaSwap(&other->supplementary_sign_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DetectedTrafficSign::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DetectedTrafficSign_descriptor_;
  metadata.reflection = DetectedTrafficSign_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DetectedTrafficSign_DetectedMainSign_CandidateMainSign

// optional double probability = 1;
bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::has_probability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_has_probability() {
  _has_bits_[0] |= 0x00000001u;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_has_probability() {
  _has_bits_[0] &= ~0x00000001u;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
 double DetectedTrafficSign_DetectedMainSign_CandidateMainSign::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.probability)
  return probability_;
}
 void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_probability(double value) {
  set_has_probability();
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.probability)
}

// optional .osi3.TrafficSign.MainSign.Classification classification = 2;
bool DetectedTrafficSign_DetectedMainSign_CandidateMainSign::has_classification() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_has_classification() {
  _has_bits_[0] |= 0x00000002u;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_has_classification() {
  _has_bits_[0] &= ~0x00000002u;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::clear_classification() {
  if (classification_ != NULL) classification_->::osi3::TrafficSign_MainSign_Classification::Clear();
  clear_has_classification();
}
const ::osi3::TrafficSign_MainSign_Classification& DetectedTrafficSign_DetectedMainSign_CandidateMainSign::classification() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  return classification_ != NULL ? *classification_ : *default_instance_->classification_;
}
::osi3::TrafficSign_MainSign_Classification* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::mutable_classification() {
  set_has_classification();
  if (classification_ == NULL) {
    classification_ = new ::osi3::TrafficSign_MainSign_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  return classification_;
}
::osi3::TrafficSign_MainSign_Classification* DetectedTrafficSign_DetectedMainSign_CandidateMainSign::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
  clear_has_classification();
  ::osi3::TrafficSign_MainSign_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedMainSign_CandidateMainSign::set_allocated_classification(::osi3::TrafficSign_MainSign_Classification* classification) {
  delete classification_;
  classification_ = classification;
  if (classification) {
    set_has_classification();
  } else {
    clear_has_classification();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign.classification)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedMainSign

// repeated .osi3.DetectedTrafficSign.DetectedMainSign.CandidateMainSign candidate = 1;
int DetectedTrafficSign_DetectedMainSign::candidate_size() const {
  return candidate_.size();
}
void DetectedTrafficSign_DetectedMainSign::clear_candidate() {
  candidate_.Clear();
}
const ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign& DetectedTrafficSign_DetectedMainSign::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Get(index);
}
::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Mutable(index);
}
::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign* DetectedTrafficSign_DetectedMainSign::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_.Add();
}
::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >*
DetectedTrafficSign_DetectedMainSign::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return &candidate_;
}
const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedMainSign_CandidateMainSign >&
DetectedTrafficSign_DetectedMainSign::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.DetectedMainSign.candidate)
  return candidate_;
}

// optional .osi3.BaseStationary base = 2;
bool DetectedTrafficSign_DetectedMainSign::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DetectedTrafficSign_DetectedMainSign::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
void DetectedTrafficSign_DetectedMainSign::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
void DetectedTrafficSign_DetectedMainSign::clear_base() {
  if (base_ != NULL) base_->::osi3::BaseStationary::Clear();
  clear_has_base();
}
const ::osi3::BaseStationary& DetectedTrafficSign_DetectedMainSign::base() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.base)
  return base_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.base)
  clear_has_base();
  ::osi3::BaseStationary* temp = base_;
  base_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedMainSign::set_allocated_base(::osi3::BaseStationary* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.base)
}

// optional .osi3.BaseStationary base_rmse = 3;
bool DetectedTrafficSign_DetectedMainSign::has_base_rmse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DetectedTrafficSign_DetectedMainSign::set_has_base_rmse() {
  _has_bits_[0] |= 0x00000004u;
}
void DetectedTrafficSign_DetectedMainSign::clear_has_base_rmse() {
  _has_bits_[0] &= ~0x00000004u;
}
void DetectedTrafficSign_DetectedMainSign::clear_base_rmse() {
  if (base_rmse_ != NULL) base_rmse_->::osi3::BaseStationary::Clear();
  clear_has_base_rmse();
}
const ::osi3::BaseStationary& DetectedTrafficSign_DetectedMainSign::base_rmse() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  return base_rmse_ != NULL ? *base_rmse_ : *default_instance_->base_rmse_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::mutable_base_rmse() {
  set_has_base_rmse();
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  return base_rmse_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedMainSign::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
  clear_has_base_rmse();
  ::osi3::BaseStationary* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedMainSign::set_allocated_base_rmse(::osi3::BaseStationary* base_rmse) {
  delete base_rmse_;
  base_rmse_ = base_rmse;
  if (base_rmse) {
    set_has_base_rmse();
  } else {
    clear_has_base_rmse();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedMainSign.base_rmse)
}

// optional .osi3.DetectedTrafficSign.DetectedMainSign.Geometry geometry = 4;
bool DetectedTrafficSign_DetectedMainSign::has_geometry() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void DetectedTrafficSign_DetectedMainSign::set_has_geometry() {
  _has_bits_[0] |= 0x00000008u;
}
void DetectedTrafficSign_DetectedMainSign::clear_has_geometry() {
  _has_bits_[0] &= ~0x00000008u;
}
void DetectedTrafficSign_DetectedMainSign::clear_geometry() {
  geometry_ = 0;
  clear_has_geometry();
}
 ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry DetectedTrafficSign_DetectedMainSign::geometry() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedMainSign.geometry)
  return static_cast< ::osi3::DetectedTrafficSign_DetectedMainSign_Geometry >(geometry_);
}
 void DetectedTrafficSign_DetectedMainSign::set_geometry(::osi3::DetectedTrafficSign_DetectedMainSign_Geometry value) {
  assert(::osi3::DetectedTrafficSign_DetectedMainSign_Geometry_IsValid(value));
  set_has_geometry();
  geometry_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedMainSign.geometry)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign

// optional double probability = 1;
bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::has_probability() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_has_probability() {
  _has_bits_[0] |= 0x00000001u;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_has_probability() {
  _has_bits_[0] &= ~0x00000001u;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_probability() {
  probability_ = 0;
  clear_has_probability();
}
 double DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::probability() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.probability)
  return probability_;
}
 void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_probability(double value) {
  set_has_probability();
  probability_ = value;
  // @@protoc_insertion_point(field_set:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.probability)
}

// optional .osi3.TrafficSign.SupplementarySign.Classification classification = 2;
bool DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::has_classification() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_has_classification() {
  _has_bits_[0] |= 0x00000002u;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_has_classification() {
  _has_bits_[0] &= ~0x00000002u;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::clear_classification() {
  if (classification_ != NULL) classification_->::osi3::TrafficSign_SupplementarySign_Classification::Clear();
  clear_has_classification();
}
const ::osi3::TrafficSign_SupplementarySign_Classification& DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::classification() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  return classification_ != NULL ? *classification_ : *default_instance_->classification_;
}
::osi3::TrafficSign_SupplementarySign_Classification* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::mutable_classification() {
  set_has_classification();
  if (classification_ == NULL) {
    classification_ = new ::osi3::TrafficSign_SupplementarySign_Classification;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  return classification_;
}
::osi3::TrafficSign_SupplementarySign_Classification* DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::release_classification() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
  clear_has_classification();
  ::osi3::TrafficSign_SupplementarySign_Classification* temp = classification_;
  classification_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign::set_allocated_classification(::osi3::TrafficSign_SupplementarySign_Classification* classification) {
  delete classification_;
  classification_ = classification;
  if (classification) {
    set_has_classification();
  } else {
    clear_has_classification();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign.classification)
}

// -------------------------------------------------------------------

// DetectedTrafficSign_DetectedSupplementarySign

// repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign.CandidateSupplementarySign candidate = 1;
int DetectedTrafficSign_DetectedSupplementarySign::candidate_size() const {
  return candidate_.size();
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_candidate() {
  candidate_.Clear();
}
const ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign& DetectedTrafficSign_DetectedSupplementarySign::candidate(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Get(index);
}
::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Mutable(index);
}
::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign* DetectedTrafficSign_DetectedSupplementarySign::add_candidate() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_.Add();
}
::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >*
DetectedTrafficSign_DetectedSupplementarySign::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return &candidate_;
}
const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign_CandidateSupplementarySign >&
DetectedTrafficSign_DetectedSupplementarySign::candidate() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.DetectedSupplementarySign.candidate)
  return candidate_;
}

// optional .osi3.BaseStationary base = 2;
bool DetectedTrafficSign_DetectedSupplementarySign::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DetectedTrafficSign_DetectedSupplementarySign::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_base() {
  if (base_ != NULL) base_->::osi3::BaseStationary::Clear();
  clear_has_base();
}
const ::osi3::BaseStationary& DetectedTrafficSign_DetectedSupplementarySign::base() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  return base_ != NULL ? *base_ : *default_instance_->base_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::mutable_base() {
  set_has_base();
  if (base_ == NULL) {
    base_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  return base_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::release_base() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
  clear_has_base();
  ::osi3::BaseStationary* temp = base_;
  base_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedSupplementarySign::set_allocated_base(::osi3::BaseStationary* base) {
  delete base_;
  base_ = base;
  if (base) {
    set_has_base();
  } else {
    clear_has_base();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.base)
}

// optional .osi3.BaseStationary base_rmse = 3;
bool DetectedTrafficSign_DetectedSupplementarySign::has_base_rmse() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void DetectedTrafficSign_DetectedSupplementarySign::set_has_base_rmse() {
  _has_bits_[0] |= 0x00000004u;
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_has_base_rmse() {
  _has_bits_[0] &= ~0x00000004u;
}
void DetectedTrafficSign_DetectedSupplementarySign::clear_base_rmse() {
  if (base_rmse_ != NULL) base_rmse_->::osi3::BaseStationary::Clear();
  clear_has_base_rmse();
}
const ::osi3::BaseStationary& DetectedTrafficSign_DetectedSupplementarySign::base_rmse() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  return base_rmse_ != NULL ? *base_rmse_ : *default_instance_->base_rmse_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::mutable_base_rmse() {
  set_has_base_rmse();
  if (base_rmse_ == NULL) {
    base_rmse_ = new ::osi3::BaseStationary;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  return base_rmse_;
}
::osi3::BaseStationary* DetectedTrafficSign_DetectedSupplementarySign::release_base_rmse() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
  clear_has_base_rmse();
  ::osi3::BaseStationary* temp = base_rmse_;
  base_rmse_ = NULL;
  return temp;
}
void DetectedTrafficSign_DetectedSupplementarySign::set_allocated_base_rmse(::osi3::BaseStationary* base_rmse) {
  delete base_rmse_;
  base_rmse_ = base_rmse;
  if (base_rmse) {
    set_has_base_rmse();
  } else {
    clear_has_base_rmse();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.DetectedSupplementarySign.base_rmse)
}

// -------------------------------------------------------------------

// DetectedTrafficSign

// optional .osi3.DetectedItemHeader header = 1;
bool DetectedTrafficSign::has_header() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DetectedTrafficSign::set_has_header() {
  _has_bits_[0] |= 0x00000001u;
}
void DetectedTrafficSign::clear_has_header() {
  _has_bits_[0] &= ~0x00000001u;
}
void DetectedTrafficSign::clear_header() {
  if (header_ != NULL) header_->::osi3::DetectedItemHeader::Clear();
  clear_has_header();
}
const ::osi3::DetectedItemHeader& DetectedTrafficSign::header() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.header)
  return header_ != NULL ? *header_ : *default_instance_->header_;
}
::osi3::DetectedItemHeader* DetectedTrafficSign::mutable_header() {
  set_has_header();
  if (header_ == NULL) {
    header_ = new ::osi3::DetectedItemHeader;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.header)
  return header_;
}
::osi3::DetectedItemHeader* DetectedTrafficSign::release_header() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.header)
  clear_has_header();
  ::osi3::DetectedItemHeader* temp = header_;
  header_ = NULL;
  return temp;
}
void DetectedTrafficSign::set_allocated_header(::osi3::DetectedItemHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    set_has_header();
  } else {
    clear_has_header();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.header)
}

// optional .osi3.DetectedTrafficSign.DetectedMainSign main_sign = 2;
bool DetectedTrafficSign::has_main_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DetectedTrafficSign::set_has_main_sign() {
  _has_bits_[0] |= 0x00000002u;
}
void DetectedTrafficSign::clear_has_main_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
void DetectedTrafficSign::clear_main_sign() {
  if (main_sign_ != NULL) main_sign_->::osi3::DetectedTrafficSign_DetectedMainSign::Clear();
  clear_has_main_sign();
}
const ::osi3::DetectedTrafficSign_DetectedMainSign& DetectedTrafficSign::main_sign() const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.main_sign)
  return main_sign_ != NULL ? *main_sign_ : *default_instance_->main_sign_;
}
::osi3::DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign::mutable_main_sign() {
  set_has_main_sign();
  if (main_sign_ == NULL) {
    main_sign_ = new ::osi3::DetectedTrafficSign_DetectedMainSign;
  }
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.main_sign)
  return main_sign_;
}
::osi3::DetectedTrafficSign_DetectedMainSign* DetectedTrafficSign::release_main_sign() {
  // @@protoc_insertion_point(field_release:osi3.DetectedTrafficSign.main_sign)
  clear_has_main_sign();
  ::osi3::DetectedTrafficSign_DetectedMainSign* temp = main_sign_;
  main_sign_ = NULL;
  return temp;
}
void DetectedTrafficSign::set_allocated_main_sign(::osi3::DetectedTrafficSign_DetectedMainSign* main_sign) {
  delete main_sign_;
  main_sign_ = main_sign;
  if (main_sign) {
    set_has_main_sign();
  } else {
    clear_has_main_sign();
  }
  // @@protoc_insertion_point(field_set_allocated:osi3.DetectedTrafficSign.main_sign)
}

// repeated .osi3.DetectedTrafficSign.DetectedSupplementarySign supplementary_sign = 3;
int DetectedTrafficSign::supplementary_sign_size() const {
  return supplementary_sign_.size();
}
void DetectedTrafficSign::clear_supplementary_sign() {
  supplementary_sign_.Clear();
}
const ::osi3::DetectedTrafficSign_DetectedSupplementarySign& DetectedTrafficSign::supplementary_sign(int index) const {
  // @@protoc_insertion_point(field_get:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Get(index);
}
::osi3::DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign::mutable_supplementary_sign(int index) {
  // @@protoc_insertion_point(field_mutable:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Mutable(index);
}
::osi3::DetectedTrafficSign_DetectedSupplementarySign* DetectedTrafficSign::add_supplementary_sign() {
  // @@protoc_insertion_point(field_add:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_.Add();
}
::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >*
DetectedTrafficSign::mutable_supplementary_sign() {
  // @@protoc_insertion_point(field_mutable_list:osi3.DetectedTrafficSign.supplementary_sign)
  return &supplementary_sign_;
}
const ::google::protobuf::RepeatedPtrField< ::osi3::DetectedTrafficSign_DetectedSupplementarySign >&
DetectedTrafficSign::supplementary_sign() const {
  // @@protoc_insertion_point(field_list:osi3.DetectedTrafficSign.supplementary_sign)
  return supplementary_sign_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)
