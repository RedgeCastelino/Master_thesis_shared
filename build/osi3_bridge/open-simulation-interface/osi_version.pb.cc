// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osi_version.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "osi_version.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace osi3 {

namespace {

const ::google::protobuf::Descriptor* InterfaceVersion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  InterfaceVersion_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_osi_5fversion_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_osi_5fversion_2eproto() {
  protobuf_AddDesc_osi_5fversion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "osi_version.proto");
  GOOGLE_CHECK(file != NULL);
  InterfaceVersion_descriptor_ = file->message_type(0);
  static const int InterfaceVersion_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceVersion, version_major_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceVersion, version_minor_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceVersion, version_patch_),
  };
  InterfaceVersion_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      InterfaceVersion_descriptor_,
      InterfaceVersion::default_instance_,
      InterfaceVersion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceVersion, _has_bits_[0]),
      -1,
      -1,
      sizeof(InterfaceVersion),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InterfaceVersion, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_osi_5fversion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      InterfaceVersion_descriptor_, &InterfaceVersion::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_osi_5fversion_2eproto() {
  delete InterfaceVersion::default_instance_;
  delete InterfaceVersion_reflection_;
}

void protobuf_AddDesc_osi_5fversion_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_osi_5fversion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::protobuf_AddDesc_google_2fprotobuf_2fdescriptor_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\021osi_version.proto\022\004osi3\032 google/protob"
    "uf/descriptor.proto\"W\n\020InterfaceVersion\022"
    "\025\n\rversion_major\030\001 \001(\r\022\025\n\rversion_minor\030"
    "\002 \001(\r\022\025\n\rversion_patch\030\003 \001(\r:Y\n\031current_"
    "interface_version\022\034.google.protobuf.File"
    "Options\030\350\370\004 \001(\0132\026.osi3.InterfaceVersionB"
    "\024H\001\302\306\'\002\010\003\302\306\'\002\020\000\302\306\'\002\030\001", 261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osi_version.proto", &protobuf_RegisterTypes);
  InterfaceVersion::default_instance_ = new InterfaceVersion();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::google::protobuf::FileOptions::default_instance(),
    81000, 11, false, false,
    &::osi3::InterfaceVersion::default_instance());
  InterfaceVersion::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_osi_5fversion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_osi_5fversion_2eproto {
  StaticDescriptorInitializer_osi_5fversion_2eproto() {
    protobuf_AddDesc_osi_5fversion_2eproto();
  }
} static_descriptor_initializer_osi_5fversion_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InterfaceVersion::kVersionMajorFieldNumber;
const int InterfaceVersion::kVersionMinorFieldNumber;
const int InterfaceVersion::kVersionPatchFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InterfaceVersion::InterfaceVersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:osi3.InterfaceVersion)
}

void InterfaceVersion::InitAsDefaultInstance() {
}

InterfaceVersion::InterfaceVersion(const InterfaceVersion& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:osi3.InterfaceVersion)
}

void InterfaceVersion::SharedCtor() {
  _cached_size_ = 0;
  version_major_ = 0u;
  version_minor_ = 0u;
  version_patch_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

InterfaceVersion::~InterfaceVersion() {
  // @@protoc_insertion_point(destructor:osi3.InterfaceVersion)
  SharedDtor();
}

void InterfaceVersion::SharedDtor() {
  if (this != default_instance_) {
  }
}

void InterfaceVersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InterfaceVersion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return InterfaceVersion_descriptor_;
}

const InterfaceVersion& InterfaceVersion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osi_5fversion_2eproto();
  return *default_instance_;
}

InterfaceVersion* InterfaceVersion::default_instance_ = NULL;

InterfaceVersion* InterfaceVersion::New(::google::protobuf::Arena* arena) const {
  InterfaceVersion* n = new InterfaceVersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InterfaceVersion::Clear() {
// @@protoc_insertion_point(message_clear_start:osi3.InterfaceVersion)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(InterfaceVersion, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<InterfaceVersion*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(version_major_, version_patch_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool InterfaceVersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:osi3.InterfaceVersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 version_major = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_major_)));
          set_has_version_major();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_version_minor;
        break;
      }

      // optional uint32 version_minor = 2;
      case 2: {
        if (tag == 16) {
         parse_version_minor:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_minor_)));
          set_has_version_minor();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_version_patch;
        break;
      }

      // optional uint32 version_patch = 3;
      case 3: {
        if (tag == 24) {
         parse_version_patch:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &version_patch_)));
          set_has_version_patch();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:osi3.InterfaceVersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:osi3.InterfaceVersion)
  return false;
#undef DO_
}

void InterfaceVersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:osi3.InterfaceVersion)
  // optional uint32 version_major = 1;
  if (has_version_major()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version_major(), output);
  }

  // optional uint32 version_minor = 2;
  if (has_version_minor()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->version_minor(), output);
  }

  // optional uint32 version_patch = 3;
  if (has_version_patch()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->version_patch(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:osi3.InterfaceVersion)
}

::google::protobuf::uint8* InterfaceVersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:osi3.InterfaceVersion)
  // optional uint32 version_major = 1;
  if (has_version_major()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version_major(), target);
  }

  // optional uint32 version_minor = 2;
  if (has_version_minor()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->version_minor(), target);
  }

  // optional uint32 version_patch = 3;
  if (has_version_patch()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->version_patch(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:osi3.InterfaceVersion)
  return target;
}

int InterfaceVersion::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:osi3.InterfaceVersion)
  int total_size = 0;

  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 version_major = 1;
    if (has_version_major()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_major());
    }

    // optional uint32 version_minor = 2;
    if (has_version_minor()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_minor());
    }

    // optional uint32 version_patch = 3;
    if (has_version_patch()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->version_patch());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InterfaceVersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:osi3.InterfaceVersion)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const InterfaceVersion* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const InterfaceVersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:osi3.InterfaceVersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:osi3.InterfaceVersion)
    MergeFrom(*source);
  }
}

void InterfaceVersion::MergeFrom(const InterfaceVersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:osi3.InterfaceVersion)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version_major()) {
      set_version_major(from.version_major());
    }
    if (from.has_version_minor()) {
      set_version_minor(from.version_minor());
    }
    if (from.has_version_patch()) {
      set_version_patch(from.version_patch());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void InterfaceVersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:osi3.InterfaceVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InterfaceVersion::CopyFrom(const InterfaceVersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:osi3.InterfaceVersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InterfaceVersion::IsInitialized() const {

  return true;
}

void InterfaceVersion::Swap(InterfaceVersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InterfaceVersion::InternalSwap(InterfaceVersion* other) {
  std::swap(version_major_, other->version_major_);
  std::swap(version_minor_, other->version_minor_);
  std::swap(version_patch_, other->version_patch_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InterfaceVersion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = InterfaceVersion_descriptor_;
  metadata.reflection = InterfaceVersion_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InterfaceVersion

// optional uint32 version_major = 1;
bool InterfaceVersion::has_version_major() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InterfaceVersion::set_has_version_major() {
  _has_bits_[0] |= 0x00000001u;
}
void InterfaceVersion::clear_has_version_major() {
  _has_bits_[0] &= ~0x00000001u;
}
void InterfaceVersion::clear_version_major() {
  version_major_ = 0u;
  clear_has_version_major();
}
 ::google::protobuf::uint32 InterfaceVersion::version_major() const {
  // @@protoc_insertion_point(field_get:osi3.InterfaceVersion.version_major)
  return version_major_;
}
 void InterfaceVersion::set_version_major(::google::protobuf::uint32 value) {
  set_has_version_major();
  version_major_ = value;
  // @@protoc_insertion_point(field_set:osi3.InterfaceVersion.version_major)
}

// optional uint32 version_minor = 2;
bool InterfaceVersion::has_version_minor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InterfaceVersion::set_has_version_minor() {
  _has_bits_[0] |= 0x00000002u;
}
void InterfaceVersion::clear_has_version_minor() {
  _has_bits_[0] &= ~0x00000002u;
}
void InterfaceVersion::clear_version_minor() {
  version_minor_ = 0u;
  clear_has_version_minor();
}
 ::google::protobuf::uint32 InterfaceVersion::version_minor() const {
  // @@protoc_insertion_point(field_get:osi3.InterfaceVersion.version_minor)
  return version_minor_;
}
 void InterfaceVersion::set_version_minor(::google::protobuf::uint32 value) {
  set_has_version_minor();
  version_minor_ = value;
  // @@protoc_insertion_point(field_set:osi3.InterfaceVersion.version_minor)
}

// optional uint32 version_patch = 3;
bool InterfaceVersion::has_version_patch() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InterfaceVersion::set_has_version_patch() {
  _has_bits_[0] |= 0x00000004u;
}
void InterfaceVersion::clear_has_version_patch() {
  _has_bits_[0] &= ~0x00000004u;
}
void InterfaceVersion::clear_version_patch() {
  version_patch_ = 0u;
  clear_has_version_patch();
}
 ::google::protobuf::uint32 InterfaceVersion::version_patch() const {
  // @@protoc_insertion_point(field_get:osi3.InterfaceVersion.version_patch)
  return version_patch_;
}
 void InterfaceVersion::set_version_patch(::google::protobuf::uint32 value) {
  set_has_version_patch();
  version_patch_ = value;
  // @@protoc_insertion_point(field_set:osi3.InterfaceVersion.version_patch)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::google::protobuf::FileOptions,
    ::google::protobuf::internal::MessageTypeTraits< ::osi3::InterfaceVersion >, 11, false >
  current_interface_version(kCurrentInterfaceVersionFieldNumber, ::osi3::InterfaceVersion::default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace osi3

// @@protoc_insertion_point(global_scope)
